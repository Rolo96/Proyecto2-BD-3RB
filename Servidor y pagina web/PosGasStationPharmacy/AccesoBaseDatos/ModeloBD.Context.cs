//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoBaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class gasStationBDEntities : DbContext
    {
        public gasStationBDEntities()
            : base("name=gasStationBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<administradorxsucursal> administradorxsucursal { get; set; }
        public DbSet<caja> caja { get; set; }
        public DbSet<cliente> cliente { get; set; }
        public DbSet<compania> compania { get; set; }
        public DbSet<empleado> empleado { get; set; }
        public DbSet<empleadoxcaja> empleadoxcaja { get; set; }
        public DbSet<factura> factura { get; set; }
        public DbSet<medicamento> medicamento { get; set; }
        public DbSet<medicamentoxfactura> medicamentoxfactura { get; set; }
        public DbSet<medicamentoxsucursal> medicamentoxsucursal { get; set; }
        public DbSet<padecimiento> padecimiento { get; set; }
        public DbSet<proveedor> proveedor { get; set; }
        public DbSet<rol> rol { get; set; }
        public DbSet<sucursal> sucursal { get; set; }
        public DbSet<telefonoxcliente> telefonoxcliente { get; set; }
    
        public virtual int BorrarCliente(Nullable<int> newcedula)
        {
            var newcedulaParameter = newcedula.HasValue ?
                new ObjectParameter("newcedula", newcedula) :
                new ObjectParameter("newcedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarCliente", newcedulaParameter);
        }
    
        public virtual int BorrarEmpleado(Nullable<int> newcedula)
        {
            var newcedulaParameter = newcedula.HasValue ?
                new ObjectParameter("newcedula", newcedula) :
                new ObjectParameter("newcedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarEmpleado", newcedulaParameter);
        }
    
        public virtual int BorrarMedicamento(string nombremedicamento)
        {
            var nombremedicamentoParameter = nombremedicamento != null ?
                new ObjectParameter("nombremedicamento", nombremedicamento) :
                new ObjectParameter("nombremedicamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarMedicamento", nombremedicamentoParameter);
        }
    
        public virtual int BorrarProveedor(string nombreproveedor)
        {
            var nombreproveedorParameter = nombreproveedor != null ?
                new ObjectParameter("nombreproveedor", nombreproveedor) :
                new ObjectParameter("nombreproveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarProveedor", nombreproveedorParameter);
        }
    
        public virtual int BorrarSucursal(string newnombre)
        {
            var newnombreParameter = newnombre != null ?
                new ObjectParameter("newnombre", newnombre) :
                new ObjectParameter("newnombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarSucursal", newnombreParameter);
        }
    
        public virtual int InsertarCliente(Nullable<int> newcedula, string newnombre1, string newnombre2, string newapellido1, string newapellido2, string newprovincia, string newciudad, string newsenas, Nullable<System.DateTime> newfechanacimiento, string newcontrasena, Nullable<int> newprioridad, string newtelefono, string newpadecimiento)
        {
            var newcedulaParameter = newcedula.HasValue ?
                new ObjectParameter("newcedula", newcedula) :
                new ObjectParameter("newcedula", typeof(int));
    
            var newnombre1Parameter = newnombre1 != null ?
                new ObjectParameter("newnombre1", newnombre1) :
                new ObjectParameter("newnombre1", typeof(string));
    
            var newnombre2Parameter = newnombre2 != null ?
                new ObjectParameter("newnombre2", newnombre2) :
                new ObjectParameter("newnombre2", typeof(string));
    
            var newapellido1Parameter = newapellido1 != null ?
                new ObjectParameter("newapellido1", newapellido1) :
                new ObjectParameter("newapellido1", typeof(string));
    
            var newapellido2Parameter = newapellido2 != null ?
                new ObjectParameter("newapellido2", newapellido2) :
                new ObjectParameter("newapellido2", typeof(string));
    
            var newprovinciaParameter = newprovincia != null ?
                new ObjectParameter("newprovincia", newprovincia) :
                new ObjectParameter("newprovincia", typeof(string));
    
            var newciudadParameter = newciudad != null ?
                new ObjectParameter("newciudad", newciudad) :
                new ObjectParameter("newciudad", typeof(string));
    
            var newsenasParameter = newsenas != null ?
                new ObjectParameter("newsenas", newsenas) :
                new ObjectParameter("newsenas", typeof(string));
    
            var newfechanacimientoParameter = newfechanacimiento.HasValue ?
                new ObjectParameter("newfechanacimiento", newfechanacimiento) :
                new ObjectParameter("newfechanacimiento", typeof(System.DateTime));
    
            var newcontrasenaParameter = newcontrasena != null ?
                new ObjectParameter("newcontrasena", newcontrasena) :
                new ObjectParameter("newcontrasena", typeof(string));
    
            var newprioridadParameter = newprioridad.HasValue ?
                new ObjectParameter("newprioridad", newprioridad) :
                new ObjectParameter("newprioridad", typeof(int));
    
            var newtelefonoParameter = newtelefono != null ?
                new ObjectParameter("newtelefono", newtelefono) :
                new ObjectParameter("newtelefono", typeof(string));
    
            var newpadecimientoParameter = newpadecimiento != null ?
                new ObjectParameter("newpadecimiento", newpadecimiento) :
                new ObjectParameter("newpadecimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarCliente", newcedulaParameter, newnombre1Parameter, newnombre2Parameter, newapellido1Parameter, newapellido2Parameter, newprovinciaParameter, newciudadParameter, newsenasParameter, newfechanacimientoParameter, newcontrasenaParameter, newprioridadParameter, newtelefonoParameter, newpadecimientoParameter);
        }
    
        public virtual int InsertarEmpleado(Nullable<int> newcedula, string newnombre1, string newnombre2, string newapellido1, string newapellido2, string newprovincia, string newciudad, string newsenas, Nullable<System.DateTime> newfechanacimiento, string newcontrasena, string newsucursal, string newrol)
        {
            var newcedulaParameter = newcedula.HasValue ?
                new ObjectParameter("newcedula", newcedula) :
                new ObjectParameter("newcedula", typeof(int));
    
            var newnombre1Parameter = newnombre1 != null ?
                new ObjectParameter("newnombre1", newnombre1) :
                new ObjectParameter("newnombre1", typeof(string));
    
            var newnombre2Parameter = newnombre2 != null ?
                new ObjectParameter("newnombre2", newnombre2) :
                new ObjectParameter("newnombre2", typeof(string));
    
            var newapellido1Parameter = newapellido1 != null ?
                new ObjectParameter("newapellido1", newapellido1) :
                new ObjectParameter("newapellido1", typeof(string));
    
            var newapellido2Parameter = newapellido2 != null ?
                new ObjectParameter("newapellido2", newapellido2) :
                new ObjectParameter("newapellido2", typeof(string));
    
            var newprovinciaParameter = newprovincia != null ?
                new ObjectParameter("newprovincia", newprovincia) :
                new ObjectParameter("newprovincia", typeof(string));
    
            var newciudadParameter = newciudad != null ?
                new ObjectParameter("newciudad", newciudad) :
                new ObjectParameter("newciudad", typeof(string));
    
            var newsenasParameter = newsenas != null ?
                new ObjectParameter("newsenas", newsenas) :
                new ObjectParameter("newsenas", typeof(string));
    
            var newfechanacimientoParameter = newfechanacimiento.HasValue ?
                new ObjectParameter("newfechanacimiento", newfechanacimiento) :
                new ObjectParameter("newfechanacimiento", typeof(System.DateTime));
    
            var newcontrasenaParameter = newcontrasena != null ?
                new ObjectParameter("newcontrasena", newcontrasena) :
                new ObjectParameter("newcontrasena", typeof(string));
    
            var newsucursalParameter = newsucursal != null ?
                new ObjectParameter("newsucursal", newsucursal) :
                new ObjectParameter("newsucursal", typeof(string));
    
            var newrolParameter = newrol != null ?
                new ObjectParameter("newrol", newrol) :
                new ObjectParameter("newrol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEmpleado", newcedulaParameter, newnombre1Parameter, newnombre2Parameter, newapellido1Parameter, newapellido2Parameter, newprovinciaParameter, newciudadParameter, newsenasParameter, newfechanacimientoParameter, newcontrasenaParameter, newsucursalParameter, newrolParameter);
        }
    
        public virtual int InsertarMedicamento(string newnombre, Nullable<int> newprecio, Nullable<bool> newprescripcion, string newproveedor)
        {
            var newnombreParameter = newnombre != null ?
                new ObjectParameter("newnombre", newnombre) :
                new ObjectParameter("newnombre", typeof(string));
    
            var newprecioParameter = newprecio.HasValue ?
                new ObjectParameter("newprecio", newprecio) :
                new ObjectParameter("newprecio", typeof(int));
    
            var newprescripcionParameter = newprescripcion.HasValue ?
                new ObjectParameter("newprescripcion", newprescripcion) :
                new ObjectParameter("newprescripcion", typeof(bool));
    
            var newproveedorParameter = newproveedor != null ?
                new ObjectParameter("newproveedor", newproveedor) :
                new ObjectParameter("newproveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarMedicamento", newnombreParameter, newprecioParameter, newprescripcionParameter, newproveedorParameter);
        }
    
        public virtual int InsertarProveedor(string newnombre, string newsede)
        {
            var newnombreParameter = newnombre != null ?
                new ObjectParameter("newnombre", newnombre) :
                new ObjectParameter("newnombre", typeof(string));
    
            var newsedeParameter = newsede != null ?
                new ObjectParameter("newsede", newsede) :
                new ObjectParameter("newsede", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarProveedor", newnombreParameter, newsedeParameter);
        }
    
        public virtual int InsertarSucursal(string newnombre, string newprovincia, string newciudad, string newsenas, string newdescripcion, string newcompania, Nullable<int> newadministrador)
        {
            var newnombreParameter = newnombre != null ?
                new ObjectParameter("newnombre", newnombre) :
                new ObjectParameter("newnombre", typeof(string));
    
            var newprovinciaParameter = newprovincia != null ?
                new ObjectParameter("newprovincia", newprovincia) :
                new ObjectParameter("newprovincia", typeof(string));
    
            var newciudadParameter = newciudad != null ?
                new ObjectParameter("newciudad", newciudad) :
                new ObjectParameter("newciudad", typeof(string));
    
            var newsenasParameter = newsenas != null ?
                new ObjectParameter("newsenas", newsenas) :
                new ObjectParameter("newsenas", typeof(string));
    
            var newdescripcionParameter = newdescripcion != null ?
                new ObjectParameter("newdescripcion", newdescripcion) :
                new ObjectParameter("newdescripcion", typeof(string));
    
            var newcompaniaParameter = newcompania != null ?
                new ObjectParameter("newcompania", newcompania) :
                new ObjectParameter("newcompania", typeof(string));
    
            var newadministradorParameter = newadministrador.HasValue ?
                new ObjectParameter("newadministrador", newadministrador) :
                new ObjectParameter("newadministrador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarSucursal", newnombreParameter, newprovinciaParameter, newciudadParameter, newsenasParameter, newdescripcionParameter, newcompaniaParameter, newadministradorParameter);
        }
    
        public virtual int ActualizarCliente(Nullable<int> newcedula, string newnombre1, string newnombre2, string newapellido1, string newapellido2, string newprovincia, string newciudad, string newsenas, Nullable<System.DateTime> newfechanacimiento, Nullable<int> newprioridad)
        {
            var newcedulaParameter = newcedula.HasValue ?
                new ObjectParameter("newcedula", newcedula) :
                new ObjectParameter("newcedula", typeof(int));
    
            var newnombre1Parameter = newnombre1 != null ?
                new ObjectParameter("newnombre1", newnombre1) :
                new ObjectParameter("newnombre1", typeof(string));
    
            var newnombre2Parameter = newnombre2 != null ?
                new ObjectParameter("newnombre2", newnombre2) :
                new ObjectParameter("newnombre2", typeof(string));
    
            var newapellido1Parameter = newapellido1 != null ?
                new ObjectParameter("newapellido1", newapellido1) :
                new ObjectParameter("newapellido1", typeof(string));
    
            var newapellido2Parameter = newapellido2 != null ?
                new ObjectParameter("newapellido2", newapellido2) :
                new ObjectParameter("newapellido2", typeof(string));
    
            var newprovinciaParameter = newprovincia != null ?
                new ObjectParameter("newprovincia", newprovincia) :
                new ObjectParameter("newprovincia", typeof(string));
    
            var newciudadParameter = newciudad != null ?
                new ObjectParameter("newciudad", newciudad) :
                new ObjectParameter("newciudad", typeof(string));
    
            var newsenasParameter = newsenas != null ?
                new ObjectParameter("newsenas", newsenas) :
                new ObjectParameter("newsenas", typeof(string));
    
            var newfechanacimientoParameter = newfechanacimiento.HasValue ?
                new ObjectParameter("newfechanacimiento", newfechanacimiento) :
                new ObjectParameter("newfechanacimiento", typeof(System.DateTime));
    
            var newprioridadParameter = newprioridad.HasValue ?
                new ObjectParameter("newprioridad", newprioridad) :
                new ObjectParameter("newprioridad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCliente", newcedulaParameter, newnombre1Parameter, newnombre2Parameter, newapellido1Parameter, newapellido2Parameter, newprovinciaParameter, newciudadParameter, newsenasParameter, newfechanacimientoParameter, newprioridadParameter);
        }
    
        public virtual int ActualizarEmpleado(Nullable<int> newcedula, string newnombre1, string newnombre2, string newapellido1, string newapellido2, string newprovincia, string newciudad, string newsenas, Nullable<System.DateTime> newfechanacimiento, string newsucursal, string newrol)
        {
            var newcedulaParameter = newcedula.HasValue ?
                new ObjectParameter("newcedula", newcedula) :
                new ObjectParameter("newcedula", typeof(int));
    
            var newnombre1Parameter = newnombre1 != null ?
                new ObjectParameter("newnombre1", newnombre1) :
                new ObjectParameter("newnombre1", typeof(string));
    
            var newnombre2Parameter = newnombre2 != null ?
                new ObjectParameter("newnombre2", newnombre2) :
                new ObjectParameter("newnombre2", typeof(string));
    
            var newapellido1Parameter = newapellido1 != null ?
                new ObjectParameter("newapellido1", newapellido1) :
                new ObjectParameter("newapellido1", typeof(string));
    
            var newapellido2Parameter = newapellido2 != null ?
                new ObjectParameter("newapellido2", newapellido2) :
                new ObjectParameter("newapellido2", typeof(string));
    
            var newprovinciaParameter = newprovincia != null ?
                new ObjectParameter("newprovincia", newprovincia) :
                new ObjectParameter("newprovincia", typeof(string));
    
            var newciudadParameter = newciudad != null ?
                new ObjectParameter("newciudad", newciudad) :
                new ObjectParameter("newciudad", typeof(string));
    
            var newsenasParameter = newsenas != null ?
                new ObjectParameter("newsenas", newsenas) :
                new ObjectParameter("newsenas", typeof(string));
    
            var newfechanacimientoParameter = newfechanacimiento.HasValue ?
                new ObjectParameter("newfechanacimiento", newfechanacimiento) :
                new ObjectParameter("newfechanacimiento", typeof(System.DateTime));
    
            var newsucursalParameter = newsucursal != null ?
                new ObjectParameter("newsucursal", newsucursal) :
                new ObjectParameter("newsucursal", typeof(string));
    
            var newrolParameter = newrol != null ?
                new ObjectParameter("newrol", newrol) :
                new ObjectParameter("newrol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEmpleado", newcedulaParameter, newnombre1Parameter, newnombre2Parameter, newapellido1Parameter, newapellido2Parameter, newprovinciaParameter, newciudadParameter, newsenasParameter, newfechanacimientoParameter, newsucursalParameter, newrolParameter);
        }
    
        public virtual int ActualizarMedicamento(string newnombre, Nullable<int> newprecio, Nullable<bool> newprescripcion, string newproveedor)
        {
            var newnombreParameter = newnombre != null ?
                new ObjectParameter("newnombre", newnombre) :
                new ObjectParameter("newnombre", typeof(string));
    
            var newprecioParameter = newprecio.HasValue ?
                new ObjectParameter("newprecio", newprecio) :
                new ObjectParameter("newprecio", typeof(int));
    
            var newprescripcionParameter = newprescripcion.HasValue ?
                new ObjectParameter("newprescripcion", newprescripcion) :
                new ObjectParameter("newprescripcion", typeof(bool));
    
            var newproveedorParameter = newproveedor != null ?
                new ObjectParameter("newproveedor", newproveedor) :
                new ObjectParameter("newproveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarMedicamento", newnombreParameter, newprecioParameter, newprescripcionParameter, newproveedorParameter);
        }
    
        public virtual int ActualizarProveedor(string newnombre, string newsede)
        {
            var newnombreParameter = newnombre != null ?
                new ObjectParameter("newnombre", newnombre) :
                new ObjectParameter("newnombre", typeof(string));
    
            var newsedeParameter = newsede != null ?
                new ObjectParameter("newsede", newsede) :
                new ObjectParameter("newsede", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProveedor", newnombreParameter, newsedeParameter);
        }
    
        public virtual int ActualizarSucursal(string newnombre, string newprovincia, string newciudad, string newsenas, string newdescripcion, string newcompania)
        {
            var newnombreParameter = newnombre != null ?
                new ObjectParameter("newnombre", newnombre) :
                new ObjectParameter("newnombre", typeof(string));
    
            var newprovinciaParameter = newprovincia != null ?
                new ObjectParameter("newprovincia", newprovincia) :
                new ObjectParameter("newprovincia", typeof(string));
    
            var newciudadParameter = newciudad != null ?
                new ObjectParameter("newciudad", newciudad) :
                new ObjectParameter("newciudad", typeof(string));
    
            var newsenasParameter = newsenas != null ?
                new ObjectParameter("newsenas", newsenas) :
                new ObjectParameter("newsenas", typeof(string));
    
            var newdescripcionParameter = newdescripcion != null ?
                new ObjectParameter("newdescripcion", newdescripcion) :
                new ObjectParameter("newdescripcion", typeof(string));
    
            var newcompaniaParameter = newcompania != null ?
                new ObjectParameter("newcompania", newcompania) :
                new ObjectParameter("newcompania", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarSucursal", newnombreParameter, newprovinciaParameter, newciudadParameter, newsenasParameter, newdescripcionParameter, newcompaniaParameter);
        }
    }
}
